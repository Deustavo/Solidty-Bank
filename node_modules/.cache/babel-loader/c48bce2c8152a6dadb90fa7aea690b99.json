{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/routes.tsx\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\nimport Landing from './Pages/Landing';\nimport Login from './Pages/Login';\nimport RecoverPassword from './Pages/RecoverPassword';\nimport Error from './Pages/Error';\nimport getIsAuth from './services/getIsAuth';\nimport ErrorRecover from './Pages/ErrorRecover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = props => {\n  const isAuth = getIsAuth();\n  if (isAuth) return /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);else return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this);\n};\n\n_c = PrivateRoute;\n\nconst UnauthRoute = props => {\n  const isAuth = getIsAuth();\n  if (!isAuth) return /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);else return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n};\n\n_c2 = UnauthRoute;\n\nconst Routes = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Landing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UnauthRoute, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UnauthRoute, {\n        path: \"/recover\",\n        component: RecoverPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/error\",\n        component: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/error-recover\",\n        component: ErrorRecover\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/dashboard\",\n        exact: true,\n        component: Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"UnauthRoute\");\n$RefreshReg$(_c3, \"Routes\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/routes.tsx"],"names":["React","BrowserRouter","Switch","Route","Redirect","Dashboard","Landing","Login","RecoverPassword","Error","getIsAuth","ErrorRecover","PrivateRoute","props","isAuth","UnauthRoute","Routes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAmDC,QAAnD,QAAmE,kBAAnE;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,MAAMC,YAAkC,GAAIC,KAAD,IAAW;AAClD,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAII,MAAJ,EAAY,oBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP,CAAZ,KACK,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CALD;;KAAMD,Y;;AAON,MAAMG,WAAiC,GAAIF,KAAD,IAAW;AACjD,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAI,CAACI,MAAL,EAAa,oBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP,CAAb,KACK,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CALD;;MAAME,W;;AAON,MAAMC,MAAgB,GAAG,MAAM;AAC3B,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,MAAD;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEV;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,UAAlB;AAA6B,QAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AAA6B,QAAA,SAAS,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAgC,QAAA,KAAK,MAArC;AAAsC,QAAA,SAAS,EAAEN;AAAjD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdD;;MAAMW,M;AAgBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Switch, Route, RouteProps, Redirect } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\n\nimport Landing from './Pages/Landing';\nimport Login from './Pages/Login';\nimport RecoverPassword from './Pages/RecoverPassword';\nimport Error from './Pages/Error';\nimport getIsAuth from './services/getIsAuth';\nimport ErrorRecover from './Pages/ErrorRecover';\n\nconst PrivateRoute: React.FC<RouteProps> = (props) => {\n    const isAuth = getIsAuth();\n\n    if (isAuth) return <Route {...props} />\n    else return <Redirect to=\"/\" />\n};\n\nconst UnauthRoute: React.FC<RouteProps> = (props) => {\n    const isAuth = getIsAuth();\n\n    if (!isAuth) return <Route {...props} />\n    else return <Redirect to=\"/dashboard\" />\n};\n\nconst Routes: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                {/* Rotas */}\n                <Route path=\"/\" exact component={Landing} />\n                <UnauthRoute path=\"/login\" component={Login} />\n                <UnauthRoute path=\"/recover\" component={RecoverPassword} />\n                <Route path=\"/error\" component={Error} />\n                <Route path=\"/error-recover\" component={ErrorRecover} />\n                <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}