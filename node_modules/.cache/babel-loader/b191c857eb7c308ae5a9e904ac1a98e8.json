{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/Pages/RecoverPassword/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Form } from '@unform/web';\nimport api from '../../services/api';\nimport * as yup from 'yup';\nimport Button from '../../components/Button';\nimport Header from '../../components/Header';\nimport Input from '../../components/Input';\nimport Loader from '../../components/Loader';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecoverPassword = () => {\n  _s();\n\n  const [isValidUsername, setIsValidUsername] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [temporaryPassword, setTemporaryPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const formUsernameRef = useRef(null);\n  const formPasswordRef = useRef(null);\n  const handleSubmitUsername = useCallback(async dataProps => {\n    setLoading(true);\n\n    try {\n      var _formUsernameRef$curr;\n\n      (_formUsernameRef$curr = formUsernameRef.current) === null || _formUsernameRef$curr === void 0 ? void 0 : _formUsernameRef$curr.setErrors({});\n      const schema = yup.object().shape({\n        username: yup.string().required('Nome de usuário obrigatório')\n      });\n      await schema.validate(dataProps, {\n        abortEarly: false\n      });\n      const {\n        status,\n        data\n      } = await api.post('/nova-senha', {\n        \"email\": 'email@email.com',\n        \"login\": username\n      });\n\n      if (status === 200 || status === 201) {\n        setTemporaryPassword(data);\n        setIsValidUsername(true);\n      } else {\n        history.push('/error');\n      }\n    } catch (err) {\n      var _formUsernameRef$curr2;\n\n      const errors = getValidationErrors(err);\n      (_formUsernameRef$curr2 = formUsernameRef.current) === null || _formUsernameRef$curr2 === void 0 ? void 0 : _formUsernameRef$curr2.setErrors(errors);\n      console.log(err);\n      toast.error('Preencha com um usuário válido!');\n\n      if (Object.keys(err).includes('isAxiosError')) {\n        history.push('/error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [username, history]);\n  const handleSubmitNewPassword = useCallback(async dataProps => {\n    setLoading(true);\n\n    try {\n      var _formPasswordRef$curr;\n\n      (_formPasswordRef$curr = formPasswordRef.current) === null || _formPasswordRef$curr === void 0 ? void 0 : _formPasswordRef$curr.setErrors({});\n      const schema = yup.object().shape({\n        password: yup.string().min(6, 'No mínimo 6 digitos'),\n        confirmPassword: yup.string().min(6, 'No mínimo 6 digitos')\n      });\n      await schema.validate(dataProps, {\n        abortEarly: false\n      });\n\n      if (password !== confirmPassword) {\n        toast.error('As senhas devem ser iguais');\n        return;\n      }\n\n      const data = await api.post(`altera-senha?senhaTemporaria=${temporaryPassword}`, {\n        \"senha\": password,\n        \"usuario\": username\n      });\n\n      if (data.status === 200 || data.status === 201) {\n        toast.success('Senha alterada com sucesso');\n        history.push('/login');\n      } else {\n        history.push('/error');\n      }\n    } catch (err) {\n      var _formPasswordRef$curr2;\n\n      const errors = getValidationErrors(err);\n      (_formPasswordRef$curr2 = formPasswordRef.current) === null || _formPasswordRef$curr2 === void 0 ? void 0 : _formPasswordRef$curr2.setErrors(errors);\n\n      if (password.length < 6) {\n        toast.error('As senhas devem ter um minimo de 6 caracteres');\n      }\n\n      if (password.length === 0 || confirmPassword.length === 0) {\n        toast.error('Algum dos campos está inválido.');\n      }\n\n      if (Object.keys(err).includes('isAxiosError')) {\n        toast.error('Ocorreu algum erro!');\n        history.push('/error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [username, password, confirmPassword, temporaryPassword, history]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isValidUsername ? /*#__PURE__*/_jsxDEV(Form, {\n        ref: formPasswordRef,\n        onSubmit: handleSubmitNewPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Esqueci minha senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Confirme seu nome de usu\\xE1rio e escolha uma nova senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"has-animation\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Digite sua nova senha\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            placeholder: \"Confirme sua nova senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Enviar\",\n          Icon: FaArrowRight,\n          type: \"submit\",\n          style: {\n            marginTop: 28\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        ref: formUsernameRef,\n        onSubmit: handleSubmitUsername,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Esqueci minha senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Confirme seu nome de usu\\xE1rio e escolha uma nova senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            name: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            placeholder: \"Confirme seu nome de usu\\xE1rio\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Prosseguir\",\n          Icon: FaArrowRight,\n          type: \"submit\",\n          style: {\n            marginTop: 28\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RecoverPassword, \"RBybQYEafwmk7vdqpJ6VWfdOTL8=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecoverPassword;\nexport default RecoverPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoverPassword\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/Pages/RecoverPassword/index.tsx"],"names":["React","useCallback","useRef","useState","FaArrowRight","useHistory","getValidationErrors","Form","api","yup","Button","Header","Input","Loader","toast","RecoverPassword","isValidUsername","setIsValidUsername","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","temporaryPassword","setTemporaryPassword","loading","setLoading","history","formUsernameRef","formPasswordRef","handleSubmitUsername","dataProps","current","setErrors","schema","object","shape","string","required","validate","abortEarly","status","data","post","push","err","errors","console","log","error","Object","keys","includes","handleSubmitNewPassword","min","success","length","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Form } from '@unform/web';\nimport api from '../../services/api';\nimport { FormHandles } from '@unform/core';\nimport * as yup from 'yup';\n\nimport Button from '../../components/Button';\nimport Header from '../../components/Header';\nimport Input from '../../components/Input';\nimport Loader from '../../components/Loader';\n\nimport { toast } from 'react-toastify';\n\nconst RecoverPassword: React.FC = () => {\n    const [isValidUsername, setIsValidUsername] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [temporaryPassword, setTemporaryPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n    const formUsernameRef = useRef<FormHandles>(null);\n    const formPasswordRef = useRef<FormHandles>(null);\n\n    const handleSubmitUsername = useCallback(async (dataProps: object) => {\n        setLoading(true);\n        try {\n            formUsernameRef.current?.setErrors({});\n\n            const schema = yup.object().shape({\n                username: yup.string().required('Nome de usuário obrigatório'),\n            });\n\n            await schema.validate(dataProps, {\n                abortEarly: false\n            });\n\n            const { status, data } = await api.post('/nova-senha', {\n                \"email\": 'email@email.com',\n                \"login\": username,\n            });\n\n            if (status === 200 || status === 201) {\n                setTemporaryPassword(data);\n                setIsValidUsername(true);\n            } else {\n                history.push('/error');\n            }\n\n        } catch (err) {\n            const errors = getValidationErrors(err);\n            formUsernameRef.current?.setErrors(errors);\n            console.log(err);\n            toast.error('Preencha com um usuário válido!');\n            if (Object.keys(err).includes('isAxiosError')) {\n                history.push('/error');\n            }\n        } finally {\n            setLoading(false);\n        }\n    }, [username, history]);\n\n    const handleSubmitNewPassword = useCallback(async (dataProps: object) => {\n        setLoading(true);\n\n        try {\n            formPasswordRef.current?.setErrors({});\n\n            const schema = yup.object().shape({\n                password: yup.string().min(6, 'No mínimo 6 digitos'),\n                confirmPassword: yup.string().min(6, 'No mínimo 6 digitos'),\n            });\n\n            await schema.validate(dataProps, {\n                abortEarly: false\n            });\n\n            if (password !== confirmPassword) {\n                toast.error('As senhas devem ser iguais');\n                return;\n            }\n\n            const data = await api.post(`altera-senha?senhaTemporaria=${temporaryPassword}`, {\n                \"senha\": password,\n                \"usuario\": username,\n            });\n\n            if (data.status === 200 || data.status === 201) {\n                toast.success('Senha alterada com sucesso');\n                history.push('/login');\n            } else {\n                history.push('/error');\n            }\n        } catch (err) {\n            const errors = getValidationErrors(err);\n            formPasswordRef.current?.setErrors(errors);\n            if (password.length < 6) {\n                toast.error('As senhas devem ter um minimo de 6 caracteres');\n            }\n            if (password.length === 0 || confirmPassword.length === 0) {\n                toast.error('Algum dos campos está inválido.');\n            }\n            if (Object.keys(err).includes('isAxiosError')) {\n                toast.error('Ocorreu algum erro!');\n                history.push('/error');\n            }\n        } finally {\n            setLoading(false);\n        }\n\n    }, [username, password, confirmPassword, temporaryPassword, history]);\n\n\n    return (\n        <>\n            <Header />\n\n            <div>\n                {isValidUsername ? (\n                    <Form ref={formPasswordRef} onSubmit={handleSubmitNewPassword}>\n                        <h2>Esqueci minha senha</h2>\n                        <p>Confirme seu nome de usuário e escolha uma nova senha</p>\n\n                        <div className=\"has-animation\">\n                            <Input name=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Digite sua nova senha\" autoFocus />\n                            <Input name=\"confirmPassword\" type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} placeholder=\"Confirme sua nova senha\" />\n                        </div>\n\n                        {loading ? <Loader /> : <Button\n                            text=\"Enviar\"\n                            Icon={FaArrowRight}\n                            type=\"submit\"\n                            style={{ marginTop: 28 }}\n                        />}\n                    </Form>\n                ) : (\n                        <Form ref={formUsernameRef} onSubmit={handleSubmitUsername} >\n                            <h2>Esqueci minha senha</h2>\n                            <p>Confirme seu nome de usuário e escolha uma nova senha</p>\n\n                            <div>\n                                <Input name=\"username\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Confirme seu nome de usuário\" autoFocus />\n                            </div>\n\n                            {loading ? <Loader /> : <Button\n                                text=\"Prosseguir\"\n                                Icon={FaArrowRight}\n                                type=\"submit\"\n                                style={{ marginTop: 28 }}\n                            />}\n                        </Form>\n                    )}\n            </div>\n        </>\n    );\n}\n\nexport default RecoverPassword;"]},"metadata":{},"sourceType":"module"}