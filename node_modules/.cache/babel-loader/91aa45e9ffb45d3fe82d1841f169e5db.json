{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Plans/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { PlansContainer, CardPlans, ModalContainer, Modal, ModalForm, TextareaWrapper } from './style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '../../../services/api';\nimport { MdAdd, MdEventNote, MdClose } from 'react-icons/md';\nimport Loader from '../../Loader';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { set_plans_data } from '../../../store/dashboard/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Plans = () => {\n  _s();\n\n  const store = useSelector(state => state.user);\n  const [plans, setPlans] = useState();\n  const [loaded, setLoaded] = useState(true);\n  const [isAddingCard, setIsAddingCard] = useState(false);\n  const dashboard = useSelector(store => store.dashboard);\n  const dispatch = useDispatch();\n  const closeModal = useCallback(() => {\n    setIsAddingCard(false);\n  }, []);\n  useEffect(() => {\n    if (plans) dispatch(set_plans_data(plans));\n  }, [dispatch, plans]);\n  useEffect(() => {\n    if (dashboard.plans_data) {\n      setPlans(dashboard.plans_data);\n      return;\n    }\n\n    setLoaded(false);\n\n    const getAccountPlans = async () => {\n      const result = await api.get(`/lancamentos/planos-conta?login=${store === null || store === void 0 ? void 0 : store.login}`, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n      setPlans(result.data);\n      setLoaded(true);\n    };\n\n    getAccountPlans();\n  }, [store, dashboard]);\n  if (loaded) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAddingCard && /*#__PURE__*/_jsxDEV(AddPlansModal, {\n      closeModal: closeModal,\n      setPlans: setPlans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(PlansContainer, {\n      children: [plans === null || plans === void 0 ? void 0 : plans.map((plan, index) => {\n        return /*#__PURE__*/_jsxDEV(CardPlans, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title-card\",\n            children: plan.descricao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: plan.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"type-movement\",\n            children: [\"Movimenta\\xE7\\xE3o tipo: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: plan.tipoMovimento\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n      }), plans && /*#__PURE__*/_jsxDEV(CardPlans, {\n        className: \"addCard\",\n        onClick: () => setIsAddingCard(true),\n        children: /*#__PURE__*/_jsxDEV(MdAdd, {\n          className: \"icon\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);else return /*#__PURE__*/_jsxDEV(Loader, {\n    style: {\n      border: 'solid #f0f0f0 4px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 15\n  }, this);\n}; // Modal add Plans\n\n\n_s(Plans, \"Vmu1BG5XIf+XYc2UXkP0teN3PQY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Plans;\n\nconst AddPlansModal = ({\n  closeModal,\n  setPlans,\n  ...props\n}) => {\n  _s2();\n\n  const history = useHistory();\n  const {\n    token,\n    login\n  } = useSelector(store => store.user);\n  const [type, setType] = useState('');\n  const [description, setDescription] = useState('');\n  const handleChangeDescription = useCallback(e => {\n    if (e.target.value.length <= 20) setDescription(e.target.value);\n  }, []);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    const filteredType = type.trim();\n    const filteredDescription = description.trim(); // Validação\n\n    if (filteredType.length === 0 || filteredDescription.length === 0) return toast.error('Preencha todos os campos!');\n    ;\n    const data = {\n      descricao: filteredDescription,\n      id: 0,\n      login,\n      padrao: true,\n      tipoMovimento: filteredType\n    };\n    api.post('lancamentos/planos-conta', data, {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        setPlans(previewPlans => {\n          if (previewPlans) {\n            toast.success('Plano adicionado com sucesso!');\n            return [...previewPlans, data];\n          }\n        });\n        closeModal();\n      } else {\n        toast.error('Ocorreu algum erro!');\n        history.push('/error');\n      }\n    });\n  }, [token, type, login, description, setPlans, closeModal, history]);\n  return /*#__PURE__*/_jsxDEV(ModalContainer, { ...props,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      children: [/*#__PURE__*/_jsxDEV(MdClose, {\n        onClick: closeModal,\n        className: \"icon\",\n        size: 30,\n        color: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(MdEventNote, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), \"Adicionar um plano\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            style: {\n              color: '#b3b3b3'\n            },\n            value: \"\",\n            children: \"Escolha o tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"R\",\n            children: \"Receita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"D\",\n            children: \"Despesa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TC\",\n            children: \"Transfer\\xEAncia entre contas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TU\",\n            children: \"Transfer\\xEAncia entre us\\xFAarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextareaWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Descri\\xE7\\xE3o\",\n            value: description,\n            onChange: handleChangeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: [\"Restante: \", 20 - description.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(MdAdd, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), \"Adicionar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddPlansModal, \"3kLdK0vEQusIhD2u2LZYONhGglg=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c2 = AddPlansModal;\nexport default Plans;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plans\");\n$RefreshReg$(_c2, \"AddPlansModal\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Plans/index.tsx"],"names":["React","useCallback","useEffect","useState","PlansContainer","CardPlans","ModalContainer","Modal","ModalForm","TextareaWrapper","useDispatch","useSelector","api","MdAdd","MdEventNote","MdClose","Loader","useHistory","toast","set_plans_data","Plans","store","state","user","plans","setPlans","loaded","setLoaded","isAddingCard","setIsAddingCard","dashboard","dispatch","closeModal","plans_data","getAccountPlans","result","get","login","headers","Authorization","token","data","map","plan","index","descricao","tipoMovimento","border","AddPlansModal","props","history","type","setType","description","setDescription","handleChangeDescription","e","target","value","length","handleSubmit","preventDefault","filteredType","trim","filteredDescription","error","id","padrao","post","then","response","status","previewPlans","success","push","color"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Dispatch, FormEvent, HTMLAttributes, SetStateAction, useCallback, useEffect, useState } from 'react';\nimport { PlansContainer, CardPlans, ModalContainer, Modal, ModalForm, TextareaWrapper } from './style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ApplicationStore } from '../../../store';\nimport api from '../../../services/api';\nimport { Plano } from '../../../types/dash-board';\nimport { MdAdd, MdEventNote, MdClose } from 'react-icons/md';\nimport Loader from '../../Loader';\nimport { UserData } from '../../../store/user/types';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { set_plans_data } from '../../../store/dashboard/actions';\n\n\nconst Plans: React.FC = () => {\n  const store = useSelector( (state: ApplicationStore) => state.user );\n  const [ plans, setPlans ] = useState<Plano[]>();\n  const [ loaded, setLoaded ] = useState(true);\n\n  const [ isAddingCard, setIsAddingCard ] = useState(false);\n\n  const dashboard = useSelector((store: ApplicationStore) => store.dashboard);\n\n  const dispatch = useDispatch();\n\n  const closeModal = useCallback(() => {\n    setIsAddingCard(false);\n  }, []);\n\n  useEffect(() => {\n    if (plans)\n      dispatch(set_plans_data(plans))\n  }, [ dispatch, plans ]);\n\n  useEffect( () => {\n    if ( dashboard.plans_data ) {\n      setPlans(dashboard.plans_data);\n\n      return;\n    }\n\n    setLoaded(false);\n\n    const getAccountPlans = async () => {\n      const result = await api.get(`/lancamentos/planos-conta?login=${store?.login}`, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n      setPlans(result.data);\n      setLoaded(true);\n    }\n\n    getAccountPlans();\n  }, [ store, dashboard ]);\n\n  if (loaded) return (\n    <>\n      { isAddingCard && <AddPlansModal closeModal={ closeModal } setPlans={ setPlans } /> }\n      <PlansContainer>\n\n        {plans?.map( (plan, index) => {\n          return ( \n          <CardPlans key={ index }>\n            <p className=\"title-card\">{plan.descricao}</p>\n            <p>{plan.login}</p>\n            <p className=\"type-movement\">\n              Movimentação tipo: <span>{plan.tipoMovimento}</span>\n            </p>\n          </CardPlans>);\n        })}\n\n        {plans && (\n          <CardPlans\n            className=\"addCard\"\n            onClick={ () => setIsAddingCard(true) }\n          >\n            <MdAdd className=\"icon\" size={ 50 } />\n          </CardPlans>\n        )}\n\n      </PlansContainer>\n    </>\n  );\n\n  else return <Loader style={{ border: 'solid #f0f0f0 4px' }} />\n}\n\n\n// Modal add Plans\n\ninterface AddPlansModalProps extends HTMLAttributes<HTMLDivElement> {\n  setPlans: Dispatch<SetStateAction<Plano[] | undefined>>;\n  closeModal: () => void;\n  children?: React.ReactNode;\n}\n\nconst AddPlansModal: React.FC<AddPlansModalProps> = ({ closeModal, setPlans, ...props }) => {\n\n    const history = useHistory();\n\n    const { token, login } = useSelector((store: ApplicationStore) => store.user as UserData);\n\n    const [ type, setType ] = useState('');\n    const [ description, setDescription ] = useState('');\n\n    const handleChangeDescription = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n      if ( e.target.value.length <= 20 ) setDescription(e.target.value);\n    }, []);\n\n    const handleSubmit = useCallback((e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n\n      const filteredType = type.trim();\n      const filteredDescription = description.trim();\n\n      // Validação\n      if ( filteredType.length === 0 || filteredDescription.length === 0 ) return toast.error('Preencha todos os campos!');;\n\n      const data = {\n        descricao: filteredDescription,\n        id: 0,\n        login,\n        padrao: true,\n        tipoMovimento: filteredType\n      }\n\n      api.post('lancamentos/planos-conta', data, { headers: {\n        Authorization: token\n      }}).then( response => {\n        if ( response.status === 200 ) {\n          setPlans((previewPlans) =>{\n            if ( previewPlans ) {\n              toast.success('Plano adicionado com sucesso!');\n              return [ ...previewPlans, data ];\n            }\n          });\n          closeModal();\n        } else {\n          toast.error('Ocorreu algum erro!');\n          history.push('/error');\n        }\n\n      });\n    }, [token, type, login, description, setPlans, closeModal, history]);\n\n    return (\n        <ModalContainer\n          {...props}\n        >\n          <Modal>\n            <MdClose onClick={ closeModal } className=\"icon\" size={30} color=\"gray\" />\n\n            <h1> \n              <MdEventNote className=\"icon\" />\n              Adicionar um plano\n            </h1>\n            <ModalForm onSubmit={ handleSubmit } >\n              <select\n                onChange={ e => setType(e.target.value) }\n              >\n                <option style={{ color: '#b3b3b3' }} value=\"\">Escolha o tipo</option>\n                <option value=\"R\">Receita</option>\n                <option value=\"D\">Despesa</option>\n                <option value=\"TC\">Transferência entre contas</option>\n                <option value=\"TU\">Transferência entre usúarios</option>\n              </select>\n              <TextareaWrapper>\n                <textarea \n                  placeholder=\"Descrição\"\n                  value={ description }\n                  onChange={ handleChangeDescription }\n                />\n\n                <label htmlFor=\"\">\n                  Restante: { 20 - description.length }\n                </label>\n              </TextareaWrapper>\n\n              <button\n                type='submit'\n              >\n                <MdAdd size={18} />\n                Adicionar\n              </button>\n            </ModalForm>\n          </Modal>\n        </ModalContainer>\n    );\n}\n\nexport default Plans;"]},"metadata":{},"sourceType":"module"}