{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Payments/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Form } from '@unform/web';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport * as yup from 'yup';\nimport { PaymentsContainer, Button } from './style';\nimport api from '../../../services/api';\nimport Input from '../../Input';\nimport { change_screen, set_transaction_data } from '../../../store/dashboard/actions';\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport Loader from '../../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Payments = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [destinatario, setDestinatario] = useState('');\n  const [data, setData] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef(null);\n  const store = useSelector(state => state.user);\n  const handleSubmit = useCallback(async dataProps => {\n    const date = new Date();\n    const referenceDate = new Date(date.setDate(date.getDate() - 1));\n    const depositDate = new Date(data);\n    let stopApplication = false;\n\n    if (destinatario.trim().length === 0) {\n      stopApplication = true;\n      toast.error('Login do destinatário não pode ser nulo');\n      stopApplication = true;\n    }\n\n    if (referenceDate > depositDate || data === '') {\n      toast.error('Escolha uma data válida');\n      stopApplication = true;\n    }\n\n    if (descricao.length < 3) {\n      toast.error('Descrição não pode ser nula');\n      stopApplication = true;\n    }\n\n    if (valor <= 0) {\n      toast.error('Valor para transferencia deve ser maior que 0');\n      stopApplication = true;\n    }\n\n    setLoading(true);\n\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = yup.object().shape({\n        receiver: yup.string().required('Login do destinatário obrigatório'),\n        date: yup.string().required('Obrigatório data'),\n        description: yup.string().min(3, 'Obrigatório descrição (min. 3 caracteres)'),\n        transferValue: yup.string().required('Obrigatório transferência (max. 10000)')\n      });\n      await schema.validate(dataProps, {\n        abortEarly: false\n      });\n      if (stopApplication) throw new Error('Something went wrong with request');\n      const result = await api.get(`/dashboard?fim=2021-02-22&inicio=2021-02-22&login=${store === null || store === void 0 ? void 0 : store.login}`, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n      const resultPlan = await api.get(`/lancamentos/planos-conta?login=${store === null || store === void 0 ? void 0 : store.login}`, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n\n      if (result.data.contaBanco.saldo < valor) {\n        toast.error('Saldo insuficiente.');\n        return;\n      }\n\n      const {\n        status\n      } = await api.post('/lancamentos', {\n        \"conta\": result.data.contaBanco.id,\n        \"contaDestino\": destinatario.trim(),\n        \"data\": data,\n        \"descricao\": descricao,\n        \"login\": store === null || store === void 0 ? void 0 : store.login,\n        \"planoConta\": resultPlan.data[3].id,\n        \"valor\": valor\n      }, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n      if (status !== 200) throw new Error('Something went wrong with request');\n      dispatch(set_transaction_data(undefined));\n      dispatch(change_screen('Transações'));\n      toast.success('Transferência realizada com sucesso.');\n      clearForm();\n    } catch (err) {\n      var _formRef$current2;\n\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n      if (err.response && err.response.status === 400) toast.error('Usuário não encontrado!');\n    } finally {\n      setLoading(false);\n    }\n  }, [destinatario, data, descricao, valor, store === null || store === void 0 ? void 0 : store.login, store === null || store === void 0 ? void 0 : store.token, dispatch]);\n\n  function clearForm() {\n    setDestinatario('');\n    setData('');\n    setDescricao('');\n    setValor(0);\n  }\n\n  const handleChangeValue = useCallback(e => {\n    const numberToAdd = Number(e.target.value);\n    if (numberToAdd > 10000) setValor(10000);else setValor(numberToAdd);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PaymentsContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Informe os dados para realizar sua transfer\\xEAncia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"receiver\",\n          value: destinatario,\n          onChange: e => setDestinatario(e.target.value),\n          type: \"text\",\n          placeholder: \"Login do destinat\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"date\",\n          value: data,\n          onChange: e => setData(e.target.value),\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"description\",\n          value: descricao,\n          onChange: e => setDescricao(e.target.value),\n          type: \"text\",\n          placeholder: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"transferValue\",\n          value: valor ? valor : '',\n          onChange: handleChangeValue,\n          type: \"number\",\n          placeholder: \"Qual o valor de sua transfer\\xEAncia?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n          style: {\n            marginTop: 59\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Transferir agora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FaArrowRight, {\n            color: \"#8c52e5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Payments, \"tqM2xBeZbL+N9wCWh3PFEox/Hbw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Payments;\nexport default Payments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Payments/index.tsx"],"names":["React","useCallback","useRef","useState","Form","FaArrowRight","useDispatch","useSelector","toast","yup","PaymentsContainer","Button","api","Input","change_screen","set_transaction_data","getValidationErrors","Loader","Payments","props","dispatch","destinatario","setDestinatario","data","setData","descricao","setDescricao","valor","setValor","loading","setLoading","formRef","store","state","user","handleSubmit","dataProps","date","Date","referenceDate","setDate","getDate","depositDate","stopApplication","trim","length","error","current","setErrors","schema","object","shape","receiver","string","required","description","min","transferValue","validate","abortEarly","Error","result","get","login","headers","Authorization","token","resultPlan","contaBanco","saldo","status","post","id","undefined","success","clearForm","err","errors","response","handleChangeValue","e","numberToAdd","Number","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useCallback, useRef, useState } from 'react';\nimport { Form } from '@unform/web';\nimport { FaArrowRight } from 'react-icons/fa'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nimport { PaymentsContainer, Button } from './style';\nimport { ApplicationStore } from '../../../store';\nimport api from '../../../services/api';\nimport { Contas, Plano } from '../../../types/dash-board';\nimport Input from '../../Input';\n\nimport { change_screen, set_transaction_data } from '../../../store/dashboard/actions';\nimport { FormHandles } from '@unform/core';\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport Loader from '../../Loader';\n\ninterface PaymentsProps {\n  func: Function;\n}\n\nconst Payments: React.FC<PaymentsProps> = (props) => {\n\n  const dispatch = useDispatch();\n\n  const [destinatario, setDestinatario] = useState('');\n  const [data, setData] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n\n  const store = useSelector((state: ApplicationStore) => state.user);\n\n  const handleSubmit = useCallback(async (dataProps: object) => {\n\n    const date = new Date();\n    const referenceDate = new Date(date.setDate(date.getDate() - 1));\n    const depositDate = new Date(data);\n    let stopApplication = false;\n\n    if (destinatario.trim().length === 0) {\n      stopApplication = true;\n      toast.error('Login do destinatário não pode ser nulo');\n      stopApplication = true;\n    }\n    if (referenceDate > depositDate || data === '') {\n      toast.error('Escolha uma data válida');\n      stopApplication = true;\n    }\n    if (descricao.length < 3) {\n      toast.error('Descrição não pode ser nula');\n      stopApplication = true;\n    }\n    if (valor <= 0) {\n      toast.error('Valor para transferencia deve ser maior que 0');\n      stopApplication = true;\n    }\n\n    setLoading(true);\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = yup.object().shape({\n        receiver: yup.string().required('Login do destinatário obrigatório'),\n        date: yup.string().required('Obrigatório data'),\n        description: yup.string().min(3, 'Obrigatório descrição (min. 3 caracteres)'),\n        transferValue: yup.string().required('Obrigatório transferência (max. 10000)'),\n      });\n\n      await schema.validate(dataProps, {\n        abortEarly: false,\n      });\n\n      if (stopApplication) throw new Error('Something went wrong with request');\n\n      const result = await api.get<Contas>(`/dashboard?fim=2021-02-22&inicio=2021-02-22&login=${store?.login}`, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n\n      const resultPlan = await api.get<Plano[]>(`/lancamentos/planos-conta?login=${store?.login}`, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n\n      if (result.data.contaBanco.saldo < valor) {\n        toast.error('Saldo insuficiente.');\n        return;\n      }\n\n      const { status } = await api.post('/lancamentos', {\n        \"conta\": result.data.contaBanco.id,\n        \"contaDestino\": destinatario.trim(),\n        \"data\": data,\n        \"descricao\": descricao,\n        \"login\": store?.login,\n        \"planoConta\": resultPlan.data[3].id,\n        \"valor\": valor,\n      }, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n\n      if (status !== 200) throw new Error('Something went wrong with request');\n\n      dispatch(set_transaction_data(undefined))\n      dispatch(change_screen('Transações'));\n\n      toast.success('Transferência realizada com sucesso.');\n      clearForm();\n    }\n    catch (err) {\n      const errors = getValidationErrors(err);\n      formRef.current?.setErrors(errors);\n\n      if ( err.response && err.response.status === 400 )\n        toast.error('Usuário não encontrado!');\n      \n    } finally {\n      setLoading(false);\n    }\n  }, [destinatario, data, descricao, valor, store?.login, store?.token, dispatch]);\n\n  function clearForm() {\n    setDestinatario('');\n    setData('');\n    setDescricao('');\n    setValor(0);\n  }\n  const handleChangeValue = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const numberToAdd = Number(e.target.value);\n\n    if (numberToAdd > 10000) setValor(10000);\n    else setValor(numberToAdd);\n  }, []);\n\n  return (\n    <>\n      <PaymentsContainer>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <p>\n            Informe os dados para realizar sua transferência\n            </p>\n\n          <Input name=\"receiver\" value={destinatario} onChange={e => setDestinatario(e.target.value)} type=\"text\" placeholder=\"Login do destinatário\" />\n          <Input name=\"date\" value={data} onChange={e => setData(e.target.value)} type=\"date\" />\n          <Input name=\"description\" value={descricao} onChange={e => setDescricao(e.target.value)} type=\"text\" placeholder=\"Descrição\" />\n          <Input name=\"transferValue\" value={valor ? valor : ''} onChange={handleChangeValue} type=\"number\" placeholder=\"Qual o valor de sua transferência?\" />\n\n          {loading ? (\n            <Loader style={{ marginTop: 59 }} />\n          ) : (\n              <Button type=\"submit\">\n                <span>Transferir agora</span>\n                <FaArrowRight color=\"#8c52e5\" />\n              </Button>\n            )}\n        </Form>\n\n\n      </PaymentsContainer>\n    </>\n  );\n\n}\n\nexport default Payments;"]},"metadata":{},"sourceType":"module"}