{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Extract/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { ExtractContainer, ExtractItem } from './style';\nimport currentIcon from \"../../../assets/svgs/current-icon.svg\";\nimport creditCardsIcon from \"../../../assets/svgs/credit-cards-icon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PlanosConta;\n\n(function (PlanosConta) {\n  PlanosConta[\"R\"] = \"Receitas\";\n  PlanosConta[\"D\"] = \"Despesas\";\n  PlanosConta[\"TC\"] = \"Transfer\\xEAncia entre contas\";\n  PlanosConta[\"TU\"] = \"Transfer\\xEAncia entre usu\\xE1rios\";\n})(PlanosConta || (PlanosConta = {}));\n\nconst Extract = props => {\n  _s();\n\n  var _props$contaBanco2, _props$contaCredito2;\n\n  const allLaunchs = useMemo(() => {\n    var _props$contaBanco, _props$contaCredito;\n\n    if (((_props$contaBanco = props.contaBanco) === null || _props$contaBanco === void 0 ? void 0 : _props$contaBanco.lancamentos) && ((_props$contaCredito = props.contaCredito) === null || _props$contaCredito === void 0 ? void 0 : _props$contaCredito.lancamentos)) {\n      const initLaunchs = [...props.contaBanco.lancamentos, ...props.contaCredito.lancamentos];\n      const orderedLauchs = initLaunchs.slice().sort((a, b) => {\n        return Number(new Date(a.data)) - Number(new Date(b.data));\n      }).reverse();\n      return orderedLauchs;\n    } else {\n      return [];\n    }\n  }, [(_props$contaBanco2 = props.contaBanco) === null || _props$contaBanco2 === void 0 ? void 0 : _props$contaBanco2.lancamentos, (_props$contaCredito2 = props.contaCredito) === null || _props$contaCredito2 === void 0 ? void 0 : _props$contaCredito2.lancamentos]);\n\n  function typePlans(typePlan) {\n    if (typePlan === 'R') {\n      return PlanosConta.R;\n    } else if (typePlan === 'D') {\n      return PlanosConta.D;\n    } else if (typePlan === 'TC') {\n      return PlanosConta.TC;\n    } else {\n      return PlanosConta.TU;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ExtractContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentIcon,\n          alt: \"current icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xDAltimos lan\\xE7amentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), allLaunchs.length === 0 && 'Nenhum lancamento', allLaunchs && allLaunchs.map((launch, index) => {\n        return /*#__PURE__*/_jsxDEV(ExtractItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: creditCardsIcon,\n            alt: \"credit cards icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: typePlans(launch.planoConta.tipoMovimento)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: launch.descricao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: launch.valor.toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: launch.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Extract, \"zMERRYJ+ryWtFnIC9etUBeRNdjU=\");\n\n_c = Extract;\nexport default Extract;\n\nvar _c;\n\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Extract/index.tsx"],"names":["React","useMemo","ExtractContainer","ExtractItem","PlanosConta","Extract","props","allLaunchs","contaBanco","lancamentos","contaCredito","initLaunchs","orderedLauchs","slice","sort","a","b","Number","Date","data","reverse","typePlans","typePlan","R","D","TC","TU","currentIcon","length","map","launch","index","creditCardsIcon","planoConta","tipoMovimento","descricao","valor","toLocaleString","style","currency"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\n\nimport { ExtractContainer, ExtractItem } from './style';\nimport currentIcon from '../../../assets/svgs/current-icon.svg';\nimport creditCardsIcon from '../../../assets/svgs/credit-cards-icon.svg';\nimport { Conta } from '../../../types/dash-board';\n\ninterface ExtractData {\n    contaBanco?: Conta,\n    contaCredito?: Conta,\n}\n\nenum PlanosConta {\n    R = 'Receitas',\n    D = 'Despesas',\n    TC = 'Transferência entre contas',\n    TU = 'Transferência entre usuários'\n}\n\nconst Extract: React.FC<ExtractData> = (props) => {\n    const allLaunchs = useMemo(() => {\n        if (props.contaBanco?.lancamentos && props.contaCredito?.lancamentos) {\n            const initLaunchs = [...props.contaBanco.lancamentos, ...props.contaCredito.lancamentos];\n\n            const orderedLauchs = initLaunchs.slice().sort((a, b) => {\n                return Number(new Date(a.data)) - Number(new Date(b.data));\n            }).reverse();\n\n            return orderedLauchs;\n        } else {\n            return [];\n        }\n    }, [props.contaBanco?.lancamentos, props.contaCredito?.lancamentos]);\n\n    function typePlans(typePlan: string) {\n        if (typePlan === 'R') {\n            return PlanosConta.R;\n        } else if (typePlan === 'D') {\n            return PlanosConta.D;\n        } else if (typePlan === 'TC') {\n            return PlanosConta.TC;\n        } else {\n            return PlanosConta.TU;\n        }\n    }\n\n    return (\n        <>\n            <ExtractContainer>\n                <div className=\"title-container\">\n                    <img src={currentIcon} alt=\"current icon\" />\n                    <p>Últimos lançamentos</p>\n                </div>\n                {allLaunchs.length === 0 && 'Nenhum lancamento'}\n                {allLaunchs && allLaunchs.map((launch, index) => {\n                    return (\n                        <ExtractItem key={index}>\n                            <img src={creditCardsIcon} alt=\"credit cards icon\" />\n                            <div className=\"text-items\">\n                                <strong>{typePlans(launch.planoConta.tipoMovimento)}</strong>\n                                <p>{launch.descricao}</p>\n                                <strong>{launch.valor.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}</strong>\n                            </div>\n                            <p className=\"date\">{launch.data}</p>\n                        </ExtractItem>\n                    )\n                })}\n            </ExtractContainer>\n        </>\n    )\n}\n\nexport default Extract;\n"]},"metadata":{},"sourceType":"module"}