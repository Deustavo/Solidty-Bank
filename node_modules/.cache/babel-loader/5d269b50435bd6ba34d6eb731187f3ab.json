{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/routes.tsx\";\nimport React from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport getIsAuth from './services/getIsAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = props => {\n  const isAuth = getIsAuth();\n  if (isAuth) return /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 24\n  }, this);else return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this);\n};\n\n_c = PrivateRoute;\n\nconst UnauthRoute = props => {\n  const isAuth = getIsAuth();\n  if (!isAuth) return /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);else return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n};\n\n_c2 = UnauthRoute;\n\nconst Routes = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"UnauthRoute\");\n$RefreshReg$(_c3, \"Routes\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/routes.tsx"],"names":["React","BrowserRouter","Route","Redirect","getIsAuth","PrivateRoute","props","isAuth","UnauthRoute","Routes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAgCC,KAAhC,EAAmDC,QAAnD,QAAmE,kBAAnE;AAOA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAGA,MAAMC,YAAkC,GAAIC,KAAD,IAAW;AAClD,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,MAAIG,MAAJ,EAAY,oBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP,CAAZ,KACK,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CALD;;KAAMD,Y;;AAON,MAAMG,WAAiC,GAAIF,KAAD,IAAW;AACjD,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,MAAI,CAACG,MAAL,EAAa,oBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP,CAAb,KACK,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CALD;;MAAME,W;;AAON,MAAMC,MAAgB,GAAG,MAAM;AAC3B,sBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMA,M;AAQN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Switch, Route, RouteProps, Redirect } from 'react-router-dom';\nimport Dashboard from './Pages/Dashboard';\n\nimport Landing from './Pages/Landing';\nimport Login from './Pages/Login';\nimport RecoverPassword from './Pages/RecoverPassword';\nimport Error from './Pages/Error';\nimport getIsAuth from './services/getIsAuth';\nimport ErrorRecover from './Pages/ErrorRecover';\n\nconst PrivateRoute: React.FC<RouteProps> = (props) => {\n    const isAuth = getIsAuth();\n\n    if (isAuth) return <Route {...props} />\n    else return <Redirect to=\"/\" />\n};\n\nconst UnauthRoute: React.FC<RouteProps> = (props) => {\n    const isAuth = getIsAuth();\n\n    if (!isAuth) return <Route {...props} />\n    else return <Redirect to=\"/dashboard\" />\n};\n\nconst Routes: React.FC = () => {\n    return (\n        <BrowserRouter>\n             {/* Defina suas rotas */}\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}