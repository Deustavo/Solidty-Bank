{"ast":null,"code":"var _jsxFileName = \"/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Deposit/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport { DepositContainer } from './style';\nimport { Button } from '../Payments/style';\nimport { FaArrowRight } from 'react-icons/fa';\nimport api from '../../../services/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Form } from '@unform/web';\nimport * as yup from 'yup';\nimport Input from '../../Input';\nimport { change_screen, set_transaction_data } from '../../../store/dashboard/actions';\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport Loader from '../../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Deposit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState(0);\n  const [invoicePayment, setInvoicePayment] = useState(false);\n  const store = useSelector(state => state.user);\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async dataProps => {\n    const date = new Date();\n    const referenceDate = new Date(date.setDate(date.getDate() - 1));\n    const depositDate = new Date(data);\n    const filteredData = data.trim();\n    let stopApplication = false;\n    setLoading(true);\n\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n\n      if (referenceDate > depositDate || filteredData === '') {\n        toast.error('Escolha uma data válida');\n        stopApplication = true;\n      } else if (valor <= 0) {\n        toast.error('Valor para transferencia deve ser maior que 0');\n        stopApplication = true;\n      }\n\n      const schema = yup.object().shape({\n        date: yup.string().required('Obrigatório data'),\n        description: yup.string().min(3, 'Obrigatório descrição (min. 3 caracteres)'),\n        transferValue: yup.string().required('Obrigatório transferência (max. 10000)')\n      });\n      await schema.validate(dataProps, {\n        abortEarly: false\n      });\n      if (stopApplication) throw new Error('Something went wrong with request');\n      const result = await api.get(`/dashboard?fim=2021-02-22&inicio=2021-02-22&login=${store === null || store === void 0 ? void 0 : store.login}`, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n      const resultPlan = await api.get(`/lancamentos/planos-conta?login=${store === null || store === void 0 ? void 0 : store.login}`, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n      const {\n        status\n      } = await api.post('/lancamentos', {\n        \"conta\": result.data.contaBanco.id,\n        \"data\": filteredData,\n        \"descricao\": descricao.trim(),\n        \"login\": store === null || store === void 0 ? void 0 : store.login,\n        \"planoConta\": invoicePayment ? resultPlan.data[2].id : resultPlan.data[0].id,\n        \"valor\": valor\n      }, {\n        headers: {\n          Authorization: store === null || store === void 0 ? void 0 : store.token\n        }\n      });\n      if (status !== 200) throw new Error('Something went wrong with request');\n      dispatch(set_transaction_data(undefined));\n      dispatch(change_screen('Transações'));\n      toast.success(invoicePayment ? 'Pagamento realizado' : 'Depósito realizado');\n      clearForm();\n    } catch (err) {\n      var _formRef$current2;\n\n      toast.error(`Ocorreu algum erro ao tentar realizar o ${invoicePayment ? 'pagamento' : 'depósito'}`);\n      const errors = getValidationErrors(err);\n      (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n    } finally {\n      setLoading(false);\n    }\n  }, [data, descricao, valor, store === null || store === void 0 ? void 0 : store.login, store === null || store === void 0 ? void 0 : store.token, dispatch, invoicePayment]);\n\n  function clearForm() {\n    setData('');\n    setDescricao('');\n    setValor(0);\n  }\n\n  const handleChangeValue = useCallback(e => {\n    const numberToAdd = Number(e.target.value);\n    if (numberToAdd > 10000) setValor(10000);else setValor(numberToAdd);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DepositContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: invoicePayment ? 'Realize o pagamento da sua fatura' : 'Realize o seu depósito'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setInvoicePayment(!invoicePayment),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: invoicePayment ? 'Realizar depósito' : 'Realizar pagamento de fatura'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      ref: formRef,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"date\",\n        value: data,\n        onChange: e => setData(e.target.value),\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"description\",\n        value: descricao,\n        onChange: e => setDescricao(e.target.value),\n        type: \"text\",\n        placeholder: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"transferValue\",\n        value: valor ? valor : '',\n        onChange: handleChangeValue,\n        type: \"number\",\n        placeholder: \"Qual o valor de sua transfer\\xEAncia?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        style: {\n          marginTop: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: invoicePayment ? 'Pagar agora' : 'Depositar agora'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaArrowRight, {\n          color: \"#8c52e5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Deposit, \"VBTKhFz+ltsEIRFuSg2LAeSoEms=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/douglasmorais/Documents/GitHub/desafio-accenture-react/src/components/Dashboard/Deposit/index.tsx"],"names":["React","useCallback","useRef","useState","DepositContainer","Button","FaArrowRight","api","useDispatch","useSelector","toast","Form","yup","Input","change_screen","set_transaction_data","getValidationErrors","Loader","Deposit","dispatch","loading","setLoading","data","setData","descricao","setDescricao","valor","setValor","invoicePayment","setInvoicePayment","store","state","user","formRef","handleSubmit","dataProps","date","Date","referenceDate","setDate","getDate","depositDate","filteredData","trim","stopApplication","current","setErrors","error","schema","object","shape","string","required","description","min","transferValue","validate","abortEarly","Error","result","get","login","headers","Authorization","token","resultPlan","status","post","contaBanco","id","undefined","success","clearForm","err","errors","handleChangeValue","e","numberToAdd","Number","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useCallback, useRef, useState } from 'react';\nimport { DepositContainer } from './style';\nimport { Button } from '../Payments/style';\nimport { FaArrowRight } from 'react-icons/fa';\nimport api from '../../../services/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ApplicationStore } from '../../../store';\nimport { Contas, Plano } from '../../../types/dash-board';\nimport { toast } from 'react-toastify';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as yup from 'yup';\n\nimport Input from '../../Input'\nimport { change_screen, set_transaction_data } from '../../../store/dashboard/actions';\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport Loader from '../../Loader';\n\nconst Deposit: React.FC = () => {\n\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [valor, setValor] = useState(0);\n  const [invoicePayment, setInvoicePayment] = useState(false);\n  const store = useSelector((state: ApplicationStore) => state.user);\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (dataProps: object) => {\n    const date = new Date();\n    const referenceDate = new Date(date.setDate(date.getDate() - 1));\n    const depositDate = new Date(data);\n    const filteredData = data.trim();\n    let stopApplication = false;\n\n    setLoading(true);\n    try {\n      formRef.current?.setErrors({});\n\n      if (referenceDate > depositDate || filteredData === '') {\n        toast.error('Escolha uma data válida');\n        stopApplication = true;\n      } else if (valor <= 0) {\n        toast.error('Valor para transferencia deve ser maior que 0');\n        stopApplication = true;\n      }\n\n      const schema = yup.object().shape({\n        date: yup.string().required('Obrigatório data'),\n        description: yup.string().min(3, 'Obrigatório descrição (min. 3 caracteres)'),\n        transferValue: yup.string().required('Obrigatório transferência (max. 10000)')\n      });\n\n      await schema.validate(dataProps, {\n        abortEarly: false,\n      });\n\n      if (stopApplication) throw new Error('Something went wrong with request');\n\n      const result = await api.get<Contas>(`/dashboard?fim=2021-02-22&inicio=2021-02-22&login=${store?.login}`, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n\n      const resultPlan = await api.get<Plano[]>(`/lancamentos/planos-conta?login=${store?.login}`, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n\n      const { status } = await api.post('/lancamentos', {\n        \"conta\": result.data.contaBanco.id,\n        \"data\": filteredData,\n        \"descricao\": descricao.trim(),\n        \"login\": store?.login,\n        \"planoConta\": invoicePayment ? resultPlan.data[2].id : resultPlan.data[0].id,\n        \"valor\": valor,\n      }, {\n        headers: {\n          Authorization: store?.token,\n        }\n      });\n\n      if (status !== 200) throw new Error('Something went wrong with request');\n\n      dispatch(set_transaction_data(undefined));\n      dispatch(change_screen('Transações'));\n\n      toast.success(invoicePayment ? 'Pagamento realizado' : 'Depósito realizado');\n      clearForm();\n    }\n    catch (err) {\n      toast.error(`Ocorreu algum erro ao tentar realizar o ${invoicePayment ? 'pagamento' : 'depósito'}`);\n      const errors = getValidationErrors(err);\n      formRef.current?.setErrors(errors);\n    } finally {\n      setLoading(false);\n    }\n  }, [data, descricao, valor, store?.login, store?.token, dispatch, invoicePayment]);\n\n  function clearForm() {\n    setData('');\n    setDescricao('');\n    setValor(0);\n  }\n\n  const handleChangeValue = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const numberToAdd = Number(e.target.value);\n\n    if (numberToAdd > 10000) setValor(10000);\n    else setValor(numberToAdd);\n  }, []);\n\n  return (\n    <DepositContainer>\n      <div className=\"header-form\">\n        <p>\n          {invoicePayment ? 'Realize o pagamento da sua fatura' : 'Realize o seu depósito'}\n        </p>\n        <Button onClick={() => setInvoicePayment(!invoicePayment)}>\n          <span>\n            {invoicePayment ? 'Realizar depósito' : 'Realizar pagamento de fatura'}\n          </span>\n        </Button>\n      </div>\n      <Form ref={formRef} onSubmit={handleSubmit}>\n        <Input name=\"date\" value={data} onChange={e => setData(e.target.value)} type=\"date\" />\n        <Input name=\"description\" value={descricao} onChange={e => setDescricao(e.target.value)} type=\"text\" placeholder=\"Descrição\" />\n        <Input name=\"transferValue\" value={valor ? valor : ''} onChange={handleChangeValue} type=\"number\" placeholder=\"Qual o valor de sua transferência?\" />\n\n        {loading ? (\n          <Loader style={{ marginTop: 48 }} />\n        ) : (\n            <Button type='submit'>\n              <span>\n                {invoicePayment ? 'Pagar agora' : 'Depositar agora'}\n              </span>\n              <FaArrowRight color=\"#8c52e5\" />\n            </Button>\n          )}\n      </Form>\n    </DepositContainer>\n  )\n}\n\nexport default Deposit;"]},"metadata":{},"sourceType":"module"}